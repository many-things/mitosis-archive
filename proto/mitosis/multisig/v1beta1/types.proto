syntax = "proto3";

package manythings.mitosis.v1beta1.multisig;

import "gogoproto/gogo.proto";

option go_package = "github.com/many-things/mitosis/x/multisig/types";

// Keygen Message
message Keygen {
  // Keygen Status
  enum Status {
    // Unspecified Status
    STATUS_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "StatusUnspecified"];

    // Keygen Assigned Status ( Not executed )
    STATUS_ASSIGN = 1 [(gogoproto.enumvalue_customname) = "StatusAssign"];

    // Keygen Started
    STATUS_EXECUTE = 2 [(gogoproto.enumvalue_customname) = "StatusExecute"];

    // Keygen Completed
    STATUS_COMPLETED = 3 [(gogoproto.enumvalue_customname) = "StatusComplete"];

    // Keygen Failed
    STATUS_FAILED = 4 [(gogoproto.enumvalue_customname) = "StatusFailed"];
  }

  // Participant Message
  message Participant {
    bytes address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];
    uint32 share = 2;
  }

  // key target chain id
  string chain = 1;

  // key id
  uint64 key_id = 2 [(gogoproto.customname) = "KeyID"];

  // keygen participants
  repeated Participant participants = 3;

  // keygen event status
  Status status = 4;

  // shares
  uint64 threshold = 5;
}

// Pubkey Message
message KeygenResult {
  // Item returns
  message Item {
    bytes participant = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];
    bytes pub_key = 2 [(gogoproto.casttype) = "github.com/many-things/mitosis/x/multisig/exported.PublicKey"];
  }
  // key target chain id
  string chain = 1;

  // key id
  uint64 key_id = 2 [(gogoproto.customname) = "KeyID"];

  // participant id
  repeated Item items = 3;
}

message MsgSignComplete {
  string sig_id = 1 [
    (gogoproto.customname) = "SigID",
    (gogoproto.casttype) = "github.com/many-things/mitosis/x/multisig/exported.SigID"
  ];

  bytes signature = 2 [(gogoproto.casttype) = "github.com/many-things/mitosis/x/multisig/exported.Signature"];
}
