syntax = "proto3";

package manythings.mitosis.v1beta1.event.server;

import "google/api/annotations.proto";
import "mitosis/event/v1beta1/server/types_msg.proto";
import "mitosis/event/v1beta1/server/types_query.proto";

option go_package = "github.com/many-things/mitosis/x/event/server";

// Msg defines the Msg service.
service Msg {
  // Submits / Initiates vote for external event.
  rpc Submit(MsgSubmit) returns (MsgSubmitResponse);

  // Votes to submitted external event.
  rpc Vote(MsgVote) returns (MsgVoteResponse);

  // Registers an address of proxy account to submit / vote external event rather than execute with validator account itself.
  rpc RegisterProxy(MsgRegisterProxy) returns (MsgRegisterProxyResponse);
}

// Query defines the gRPC querier service.
service Query {
  // Queries the parameters of the module.
  rpc Params(QueryParams) returns (QueryParamsResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/params"};
  }

  // Get poll
  rpc Poll(QueryPoll) returns (QueryPollResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/poll/{chain}/{id}"};
  }

  // List polls
  rpc Polls(QueryPolls) returns (QueryPollsResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/polls/{chain}"};
  }
}
