syntax = "proto3";

package manythings.mitosis.v1beta1.event.server;

import "google/api/annotations.proto";
import "mitosis/event/v1beta1/server/types_msg.proto";
import "mitosis/event/v1beta1/server/types_query.proto";

option go_package = "github.com/many-things/mitosis/x/event/server";

// Msg defines the Msg service.
service Msg {
  // Submits / Initiates vote for external event.
  rpc SubmitEvent(MsgSubmitEvent) returns (MsgSubmitResponse);

  // Registers an address of proxy account to submit / vote external event rather than execute with validator account itself.
  rpc RegisterProxy(MsgRegisterProxy) returns (MsgRegisterProxyResponse);

  // Clears proxy account info from a validator
  rpc ClearProxy(MsgClearProxy) returns (MsgClearProxyResponse);

  // Register chain info
  rpc RegisterChain(MsgRegisterChain) returns (MsgRegisterChainResponse);

  // Unregister chain info
  rpc UnregisterChain(MsgUnregisterChain) returns (MsgUnregisterChainResponse);
}

// Query defines the gRPC querier service.
service Query {
  // Queries the parameters of the module.
  rpc Params(QueryParams) returns (QueryParamsResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/params"};
  }

  // Get poll
  rpc Poll(QueryPoll) returns (QueryPollResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/poll/{chain}/{id}"};
  }

  // List polls
  rpc Polls(QueryPolls) returns (QueryPollsResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/polls/{chain}"};
  }

  // Get proxy
  rpc Proxy(QueryProxy) returns (QueryProxyResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/proxy/{validator}"};
  }

  // Get proxied validator
  rpc ProxyReverse(QueryProxyReverse) returns (QueryProxyReverseResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/proxy-reverse/{proxy_account}"};
  }

  // List proxies
  rpc Proxies(QueryProxies) returns (QueryProxiesResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/proxies"};
  }

  // Get chain
  rpc Chain(QueryChain) returns (QueryChainResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/chain/{chain}"};
  }

  // List chain
  rpc Chains(QueryChains) returns (QueryChainsResponse) {
    option (google.api.http) = {get: "/mitosis/event/v1beta1/chains"};
  }
}
