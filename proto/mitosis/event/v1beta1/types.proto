syntax = "proto3";

package manythings.mitosis.v1beta1.event;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/many-things/mitosis/x/event/types";

// TxReqEvent Message
message TxReqEvent {
  string dest_chain = 1;
  bytes dest_addr = 2;
  uint32 op_id = 3;
  repeated bytes op_args = 4;

  repeated cosmos.base.v1beta1.Coin funds = 5;
}

// TxResEvent Message
message TxResEvent {
  // Request Event id correspond to given response
  uint64 req_evt_id = 1;
  bool ok = 2;
  bytes result = 3;
}

// Event Message
message Event {
  // Block height
  uint64 height = 1;

  // Transaction hash
  bytes tx_hash = 2;

  // Event Index
  uint32 evt_idx = 3;

  // Actual event payload
  oneof event {
    TxReqEvent req = 4;
    TxResEvent res = 5;
  }
}

// Tally Message
message Tally {
  string total_power = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint"];
  string ack = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint"];
  string nak = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint"];
}

// Poll Message
message Poll {
  // Poll Status
  enum Status {
    // Unspecified status
    STATUS_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "StatusUnspecified"];

    // Pending status
    STATUS_PENDING = 1 [(gogoproto.enumvalue_customname) = "StatusPending"];

    // Confirmed status
    STATUS_CONFIRMED = 2 [(gogoproto.enumvalue_customname) = "StatusConfirmed"];

    // Rejected status
    STATUS_REJECTED = 3 [(gogoproto.enumvalue_customname) = "StatusRejected"];
  }

  // Chain identifier
  string chain = 1;

  // Poll id
  uint64 id = 2;

  // Operation id - will be filled
  uint64 op_id = 3;

  // Poll proposer
  bytes proposer = 4 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

  // Poll status
  Status status = 5;

  // Vote tally
  Tally tally = 6;

  // Event payload
  Event payload = 7;
}
