syntax = "proto3";

package manythings.mitosis.event;

option go_package = "github.com/many-things/mitosis/x/event/types";

// Msg defines the Msg service.
service Msg {
  // VoteEvent
  rpc VoteEvent(MsgVoteEvent) returns (MsgVoteEventResponse);
}

// Operation
message Operation {
  uint64 id = 1;
  bytes args = 2;
}

// IncomingEvent
message IncomingEvent {
  string chain_id = 1;
  string tx_hash = 2;
  uint64 event_index = 3;
  bytes dest = 4;
  bytes denom = 5;
  Operation operation = 6;
}

// OutgoingEvent => ref. evm call response
message OutgoingEvent {
  string chain_id = 1;
  string tx_hash = 2;
  bool ok = 3;
  bytes result = 4;
}

// MsgVoteEvent
message MsgVoteEvent {
  string voter = 1;
  repeated IncomingEvent incoming = 2;
  repeated OutgoingEvent outgoing = 3;
}

// MsgVoteEventResponse
message MsgVoteEventResponse {}
