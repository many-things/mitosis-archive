syntax = "proto3";

package manythings.mitosis.v1beta1.context.server;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "mitosis/context/v1beta1/params.proto";
import "mitosis/context/v1beta1/types_operation.proto";

option go_package = "github.com/many-things/mitosis/x/context/server";

// QueryParams is request type for the Query/Params RPC method.
message QueryParams {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// Get single operation request
message QueryOperation {
  uint64 id = 1;
}

// Response of [QueryOperation]
message QueryOperationResponse {
  Operation operation = 1;
}

// Query list of operations request
message QueryOperations {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// Response of [QueryOperations]
message QueryOperationsResponse {
  repeated Operation operations = 1;
  cosmos.base.query.v1beta1.PageResponse page = 2;
}

// Query Operation using external chain txHash
message QueryOperationHash {
  string chain = 1;
  bytes tx_hash = 2;
}

// Response of [QueryOperationHash]
message QueryOperationHashResponse {
  Operation operation = 1;
}

// QueryVault queries registered vault for a chain
message QueryVault {
  string chain = 1;
}

// Response of [QueryVault]
message QueryVaultResponse {
  string chain = 1;
  string vault = 2;
}

// QueryVaults queries the list of vaults registered
message QueryVaults {
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// Response of [QueryVaults]
message QueryVaultsResponse {
  repeated QueryVaultResponse vaults = 1;
  cosmos.base.query.v1beta1.PageResponse page = 2;
}
