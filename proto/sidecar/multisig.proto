syntax = "proto3";

option go_package = "github.com/many-things/mitosis/sidecar/types";

package manythings.sidecar;

import "common.proto";

service Multisig {
  rpc KeyPresence(KeyPresenceRequest) returns (KeyPresenceResponse);
  rpc Keygen(KeygenRequest) returns (KeygenResponse);
  rpc Sign(SignRequest) returns (SignResponse);
}

//message KeyPresenceRequest {
//  string key_uid = 1;
//  bytes pub_key = 2; // SEC1-encoded compressed pub key bytes to find the right mnemonic. Latest is used, if empty.
//}
//
//message KeyPresenceResponse {
//  enum Response {
//    RESPONSE_UNSPECIFIED = 0;
//    RESPONSE_PRESENT = 1;
//    RESPONSE_ABSENT = 2;
//    RESPONSE_FAIL = 3;
//  }
//
//  Response response = 1;
//}

message KeygenRequest {
  string key_uid = 1;
  string party_uid = 2;
}

message KeygenResponse {
  oneof keygen_response {
    bytes pub_key = 1;
    string error = 2;
  }
}

message SignRequest {
  string key_uid = 1;
  bytes msg_to_sign = 2;
  string party_uid = 3;
  bytes pub_key = 4;
}

message SignResponse {
  oneof sign_response {
    bytes signature = 1;
    string error = 2;
  }
}